# Dockerfile.prod - 前后端合一生产环境
FROM node:18-alpine AS frontend-builder

# 设置工作目录
WORKDIR /app

# 复制前端文件
COPY frontend/package*.json ./
RUN npm ci --only=production

# 复制前端源代码
COPY frontend/ ./

# 构建前端
RUN npm run build

# 后端构建阶段
FROM python:3.11-slim

# 设置工作目录
WORKDIR /app

# 设置环境变量
ENV PYTHONPATH=/app
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# 使用阿里云镜像源
RUN echo "deb https://mirrors.aliyun.com/debian/ bookworm main non-free non-free-firmware contrib" > /etc/apt/sources.list && \
    echo "deb https://mirrors.aliyun.com/debian/ bookworm-updates main non-free non-free-firmware contrib" >> /etc/apt/sources.list && \
    echo "deb https://mirrors.aliyun.com/debian-security bookworm-security main non-free non-free-firmware contrib" >> /etc/apt/sources.list

# 安装基础工具
RUN apt-get update && apt-get install -y --no-install-recommends ca-certificates curl git \
 && rm -rf /var/lib/apt/lists/*

# 安装完整的系统依赖
RUN apt-get update && apt-get install -y --fix-missing --allow-unauthenticated \
    gcc \
    g++ \
    libpq-dev \
    wget \
    gnupg \
    fonts-unifont \
    fonts-liberation \
    libxcb1 \
    libxkbcommon0 \
    libx11-6 \
    libxext6 \
    libxfixes3 \
    libxrandr2 \
    libatspi2.0-0 \
    libxcomposite1 \
    libxdamage1 \
    libgbm1 \
    libpango-1.0-0 \
    libcairo2 \
    libasound2 \
    libdrm2 \
    libxss1 \
    libgtk-3-0 \
    libnss3 \
    libnspr4 \
    dbus \
    procps \
    || true

# 复制Python依赖文件
COPY requirements.txt ./

# Python（使用国内镜像源）
RUN pip install --no-cache-dir -i https://pypi.tuna.tsinghua.edu.cn/simple -r requirements.txt

# 复制后端源代码
COPY . .

# 从前端构建阶段复制构建好的前端文件
COPY --from=frontend-builder /app/build ./frontend/build

# 创建数据目录
RUN mkdir -p /app/data /app/logs

# 创建非root用户
RUN useradd -m -u 1000 appuser

# 安装Playwright浏览器（生产环境）- 以appuser身份安装
USER appuser
RUN playwright install chromium

# 切换回root用户设置权限
USER root
# 设置所有权
RUN chown -R appuser:appuser /app

# 切换用户
USER appuser

# 暴露端口
EXPOSE 8000

# 启动命令
CMD ["python", "main.py"]
